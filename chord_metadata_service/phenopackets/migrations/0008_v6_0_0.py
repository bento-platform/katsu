# Generated by Django 4.2.7 on 2023-11-16 21:20

import chord_metadata_service.restapi.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion

def migrate_procedure_json(apps, schema_editor):
    """
    Forward data migration for Biosample.procedure.
    Migrating from a Django Model to a JSON field.
    """
    Biosample = apps.get_model("phenopackets", "Biosample")
    for bios in Biosample.objects.all():
        procedure = bios.procedure

        procedure_json = {"code": procedure.code}
        if procedure.body_site:
            procedure_json["body_site"] = procedure.body_site
        if procedure.performed:
            procedure_json["performed"] = procedure.performed
        
        procedure.procedure_json = procedure_json
        procedure.save()

PROCEDURE_MIGRATIONS = [
    migrations.AddField(
        model_name='biosample',
        name='procedure_json',
        field=models.JSONField(blank=True, help_text='A description of a clinical procedure performed on a subject in order to extract a biosample.', null=True),
    ),
    # Migrate from model to JSON field
    migrations.RunPython(migrate_procedure_json),
    # Remove FK field, rename JSON one
    migrations.RemoveField(
        model_name="biosample", 
        name="procedure",
    ),
    migrations.RenameField(
        model_name='biosample', 
        old_name='procedure_json', 
        new_name='procedure',
    ),
    migrations.DeleteModel(
        name='Procedure',
    ),
]

class Migration(migrations.Migration):

    dependencies = [
        ('phenopackets', '0007_remove_phenopacket_table'),
    ]

    operations = [
        *PROCEDURE_MIGRATIONS,
        migrations.CreateModel(
            name='GeneDescriptor',
            fields=[
                ('created', models.DateTimeField(auto_now=True, null=True)),
                ('updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('value_id', models.CharField(help_text='Official identifier of the gene. REQUIRED.', max_length=200, primary_key=True, serialize=False)),
                ('symbol', models.CharField(blank=True, help_text='Official gene symbol. REQUIRED.', max_length=200)),
                ('description', models.CharField(blank=True, help_text='A free-text description of the gene', max_length=200)),
                ('alternate_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), blank=True, default=list, help_text='Alternative identifier(s) of the gene', size=None)),
                ('xrefs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), blank=True, default=list, help_text='Related concept IDs (e.g. gene ortholog IDs) may be placed in xrefs', size=None)),
                ('alternate_symbols', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), blank=True, default=list, help_text='Alternative symbol(s) of the gene', size=None)),
                ('extra_properties', models.JSONField(blank=True, help_text='Extra properties that are not supported by current schema', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VariantInterpretation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, null=True)),
                ('updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('acmg_pathogenicity_classification', models.CharField(choices=[('NOT_PROVIDED', 'Not provided'), ('BENIGN', 'Benign'), ('LIKELY_BENIGN', 'Likely benign'), ('UNCERTAIN_SIGNIFICANCE', 'Uncertain significance'), ('LIKELY_PATHOGENIC', 'Likely pathogenic'), ('PATHOGENIC', 'Pathogenic')], default='NOT_PROVIDED', help_text='one of the five ACMG pathogenicity categories, or NOT_PROVIDED. The default is NOT_PROVIDED', max_length=200)),
                ('therapeutic_actionability', models.CharField(choices=[('UNKNOWN_ACTIONABILITY', 'Unknown actionability'), ('NOT_ACTIONABLE', 'Not actionable'), ('ACTIONABLE', 'Actionable')], default='UNKNOWN_ACTIONABILITY', help_text='The therapeutic actionability of the variant, default is UNKNOWN_ACTIONABILITY', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VariationDescriptor',
            fields=[
                ('created', models.DateTimeField(auto_now=True, null=True)),
                ('updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('id', models.CharField(help_text='Descriptor ID; MUST be unique within document. REQUIRED.', max_length=200, primary_key=True, serialize=False)),
                ('variation', models.JSONField(blank=True, help_text='The VRS Variation object', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'description': 'A representation of the state of one or more biomolecules.', 'discriminator': {'propertyName': 'type'}, 'oneOf': [{'$ref': '#/definitions/AbsoluteCopyNumber'}, {'$ref': '#/definitions/Allele'}, {'$ref': '#/definitions/Genotype'}, {'$ref': '#/definitions/Haplotype'}, {'$ref': '#/definitions/RelativeCopyNumber'}, {'$ref': '#/definitions/Text'}, {'$ref': '#/definitions/VariationSet'}]}, formats=None)])),
                ('label', models.CharField(blank=True, help_text='A primary label for the variation', max_length=200)),
                ('description', models.CharField(blank=True, help_text='A free-text description of the variation', max_length=200)),
                ('expressions', models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/phenopackets/expression', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'The Expression class is designed to enable descriptions based on a specified nomenclature or syntax for representing an object. Common examples of expressions for the description of molecular variation include the HGVS and ISCN nomenclatures.', 'help': 'The Expression class is designed to enable descriptions based on a specified nomenclature or syntax for representing an object. Common examples of expressions for the description of molecular variation include the HGVS and ISCN nomenclatures.', 'properties': {'syntax': {'description': 'A name for the expression syntax. REQUIRED.', 'help': 'A name for the expression syntax. REQUIRED.', 'type': 'string'}, 'value': {'description': 'The concept expression as a string. REQUIRED.', 'help': 'The concept expression as a string. REQUIRED.', 'type': 'string'}, 'version': {'description': 'An optional version of the expression syntax.', 'help': 'An optional version of the expression syntax.', 'type': 'string'}}, 'required': ['syntax', 'value'], 'title': 'Expression schema', 'type': 'object'}, formats=None)])),
                ('vcf_record', models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/phenopackets/vcf_record', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element is used to describe variants using the Variant Call Format, which is in near universal use for exome, genome, and other Next-Generation-Sequencing-based variant calling. It is an appropriate option to use for variants reported according to their chromosomal location as derived from a VCF file.', 'help': 'This element is used to describe variants using the Variant Call Format, which is in near universal use for exome, genome, and other Next-Generation-Sequencing-based variant calling. It is an appropriate option to use for variants reported according to their chromosomal location as derived from a VCF file.', 'properties': {'alt': {'description': 'Alternate base. REQUIRED.', 'help': 'Alternate base. REQUIRED.', 'type': 'string'}, 'chrom': {'description': 'Chromosome or contig identifier. REQUIRED.', 'help': 'Chromosome or contig identifier. REQUIRED.', 'type': 'string'}, 'filter': {'description': 'Filter status: PASS if this position has passed all filters.', 'help': 'Filter status: PASS if this position has passed all filters.', 'type': 'string'}, 'genome_assembly': {'description': 'Identifier for the genome assembly used to call the allele. REQUIRED.', 'help': 'Identifier for the genome assembly used to call the allele. REQUIRED.', 'type': 'string'}, 'id': {'description': 'Identifier: Semicolon-separated list of unique identifiers where available. If this is a dbSNP variant thers number(s) should be used.', 'help': 'Identifier: Semicolon-separated list of unique identifiers where available. If this is a dbSNP variant thers number(s) should be used.', 'type': 'string'}, 'info': {'description': 'Additional information: Semicolon-separated series of additional information fields', 'help': 'Additional information: Semicolon-separated series of additional information fields', 'type': 'string'}, 'pos': {'description': 'The reference position, with the 1st base having position 1. REQUIRED.', 'help': 'The reference position, with the 1st base having position 1. REQUIRED.', 'type': 'integer'}, 'qual': {'description': 'Quality: Phred-scaled quality score for the assertion made in ALT.', 'help': 'Quality: Phred-scaled quality score for the assertion made in ALT.', 'type': 'string'}, 'ref': {'description': 'Reference base. REQUIRED.', 'help': 'Reference base. REQUIRED.', 'type': 'string'}}, 'required': ['genome_assembly', 'chrom', 'pos', 'ref', 'alt'], 'title': 'VCF record schema', 'type': 'object'}, formats=None)])),
                ('xrefs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), blank=True, default=list, help_text='List of CURIEs representing associated concepts. Allele registry, ClinVar, or other related IDs should be included as xrefs', size=None)),
                ('alternate_labels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), blank=True, default=list, help_text='Common aliases for a variant, e.g. EGFR vIII, are alternate labels', size=None)),
                ('extensions', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/phenopackets/extension', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'The Extension class provides a means to extend descriptions with other attributes unique to a content provider', 'properties': {'name': {'type': 'string'}, 'value': {'type': 'string'}}, 'required': ['name', 'value'], 'title': 'Extension schema', 'type': 'object'}, formats=None)]), blank=True, default=list, help_text='List of resource-specific Extensions needed to describe the variation', size=None)),
                ('molecule_context', models.CharField(blank=True, help_text='The molecular context of the vrs variation.', max_length=200)),
                ('structural_type', models.JSONField(blank=True, help_text='The structural variant type associated with this variant, such as a substitution, deletion, or fusion.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)])),
                ('vrs_ref_allele_seq', models.CharField(blank=True, help_text='A Sequence corresponding to a “ref allele”, describing the sequence expected at a SequenceLocation reference.', max_length=200)),
                ('allelic_state', models.JSONField(blank=True, help_text='The zygosity of the variant as determined in all of the samples representedin this Phenopacket is represented using a list of terms taken from the Genotype Ontology (GENO).', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)])),
                ('gene_context', models.ForeignKey(blank=True, help_text='This element represents an identifier for a gene, using the Gene Descriptor from the VRSATILE Framework.', null=True, on_delete=django.db.models.deletion.CASCADE, to='phenopackets.genedescriptor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='biosample',
            name='hts_files',
        ),
        migrations.RemoveField(
            model_name='biosample',
            name='individual_age_at_collection',
        ),
        migrations.RemoveField(
            model_name='biosample',
            name='variants',
        ),
        migrations.RemoveField(
            model_name='diagnosis',
            name='disease',
        ),
        migrations.RemoveField(
            model_name='disease',
            name='tnm_finding',
        ),
        migrations.RemoveField(
            model_name='genomicinterpretation',
            name='gene',
        ),
        migrations.RemoveField(
            model_name='genomicinterpretation',
            name='status',
        ),
        migrations.RemoveField(
            model_name='genomicinterpretation',
            name='variant',
        ),
        migrations.RemoveField(
            model_name='interpretation',
            name='meta_data',
        ),
        migrations.RemoveField(
            model_name='interpretation',
            name='phenopacket',
        ),
        migrations.RemoveField(
            model_name='interpretation',
            name='resolution_status',
        ),
        migrations.RemoveField(
            model_name='phenopacket',
            name='genes',
        ),
        migrations.RemoveField(
            model_name='phenopacket',
            name='hts_files',
        ),
        migrations.RemoveField(
            model_name='phenopacket',
            name='variants',
        ),
        migrations.RemoveField(
            model_name='phenotypicfeature',
            name='modifier',
        ),
        migrations.RemoveField(
            model_name='phenotypicfeature',
            name='negated',
        ),
        migrations.AddField(
            model_name='biosample',
            name='derived_from_id',
            field=models.ForeignKey(blank=True, help_text='id of the biosample from which the current biosample was derived (if applicable)', 
            null=True, on_delete=django.db.models.deletion.CASCADE, related_name='derived_biosamples', to='phenopackets.biosample'),
        ),
        migrations.AddField(
            model_name='biosample',
            name='measurements',
            field=models.JSONField(blank=True, help_text='List of measurements of the sample', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/phenopackets/measurement', '$schema': 'http://json-schema.org/draft-07/schema#', 'oneOf': [{'properties': {'value': {'$id': '/chord_metadata_service/phenopackets/value', '$schema': 'http://json-schema.org/draft-07/schema#', 'oneOf': [{'properties': {'quantity': {'$id': '/chord_metadata_service/phenopackets/quantity', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'reference_range': {'$id': '/chord_metadata_service/phenopackets/reference_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'high': {'type': 'number'}, 'low': {'type': 'number'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['unit', 'low', 'high'], 'title': 'Reference range schema', 'type': 'object'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'value': {'type': 'number'}}, 'required': ['unit', 'value'], 'title': 'Quantity schema', 'type': 'object'}}, 'required': ['quantity'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}], 'title': 'Value schema', 'type': 'object'}}, 'required': ['value'], 'type': 'object'}, {'properties': {'complex_value': {'$id': '/chord_metadata_service/phenopackets/complex_value', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'typed_quantities': {'items': {'$id': '/chord_metadata_service/phenopackets/typed_quantity', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'quantity': {'$id': '/chord_metadata_service/phenopackets/quantity', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'reference_range': {'$id': '/chord_metadata_service/phenopackets/reference_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'high': {'type': 'number'}, 'low': {'type': 'number'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['unit', 'low', 'high'], 'title': 'Reference range schema', 'type': 'object'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'value': {'type': 'number'}}, 'required': ['unit', 'value'], 'title': 'Quantity schema', 'type': 'object'}, 'type': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['type', 'quantity'], 'title': 'Quantity schema', 'type': 'object'}, 'type': 'array'}}, 'required': ['typed_quantities'], 'title': 'Complex value schema', 'type': 'object'}}, 'required': ['complex_value'], 'type': 'object'}], 'properties': {'assay': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'description': {'type': 'string'}, 'procedure': {'$id': '/chord_metadata_service/phenopackets/procedure', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'A description of a clinical procedure performed on a subject in order to extract a biosample.', 'help': 'A description of a clinical procedure performed on a subject in order to extract a biosample.', 'properties': {'body_site': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'An ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'A CURIE-style identifier for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'A human readable class name for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'code': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term that represents a clinical procedure performed on a subject.', 'help': 'An ontology term that represents a clinical procedure performed on a subject.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term that represents a clinical procedure performed on a subject.', 'help': 'A CURIE-style identifier for an ontology term that represents a clinical procedure performed on a subject.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term that represents a clinical procedure performed on a subject.', 'help': 'A human readable class name for an ontology term that represents a clinical procedure performed on a subject.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'performed': {'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Age/time when the procedure was performed', 'help': 'Age/time when the procedure was performed', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}}, 'required': ['code'], 'title': 'Procedure schema', 'type': 'object'}, 'time_observed': {'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}}, 'required': ['assay'], 'title': 'Measurement schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='biosample',
            name='pathological_stage',
            field=models.JSONField(blank=True, help_text='An ontology term Pathological stage, if applicable..', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='biosample',
            name='sample_type',
            field=models.JSONField(blank=True, help_text='type of material, e.g., RNA, DNA, Cultured cells', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='biosample',
            name='time_of_collection',
            field=models.JSONField(blank=True, help_text='Age of the proband at the time the sample was taken.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='disease',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='disease',
            name='clinical_tnm_finding',
            field=models.JSONField(blank=True, help_text='A list of terms representing the tumour TNM score. Elements should be derived from child terms of NCIT:C48232 (Cancer TNM Finding) or equivalent hierarchy from another ontology.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class_list', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Ontology class list', 'items': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'title': 'Ontology class list', 'type': 'array'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='disease',
            name='excluded',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='disease',
            name='laterality',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='disease',
            name='primary_site',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='disease',
            name='resolution',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='genomicinterpretation',
            name='interpretation_status',
            field=models.CharField(choices=[('UNKNOWN_STATUS', 'Unknown status'), ('REJECTED', 'Rejected'), ('CANDIDATE', 'Candidate'), ('CONTRIBUTORY', 'Contributory'), ('CAUSATIVE', 'Causative')], default='UNKNOWN_STATUS', help_text='How the call of this GenomicInterpretation was interpreted.', max_length=200),
        ),
        migrations.AddField(
            model_name='interpretation',
            name='progress_status',
            field=models.CharField(blank=True, choices=[('UNKNOWN_PROGRESS', 'Unknown Progress'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('SOLVED', 'Solved'), ('UNSOLVED', 'Unsolved')], help_text='The current status of work on the case.', max_length=200),
        ),
        migrations.AddField(
            model_name='interpretation',
            name='summary',
            field=models.CharField(blank=True, help_text='Free text summary of the interpretation.', max_length=200),
        ),
        migrations.AddField(
            model_name='phenopacket',
            name='interpretations',
            field=models.ManyToManyField(blank=True, help_text='Interpretations related to this phenopacket', to='phenopackets.interpretation'),
        ),
        migrations.AddField(
            model_name='phenopacket',
            name='measurements',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/phenopackets/measurement', '$schema': 'http://json-schema.org/draft-07/schema#', 'oneOf': [{'properties': {'value': {'$id': '/chord_metadata_service/phenopackets/value', '$schema': 'http://json-schema.org/draft-07/schema#', 'oneOf': [{'properties': {'quantity': {'$id': '/chord_metadata_service/phenopackets/quantity', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'reference_range': {'$id': '/chord_metadata_service/phenopackets/reference_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'high': {'type': 'number'}, 'low': {'type': 'number'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['unit', 'low', 'high'], 'title': 'Reference range schema', 'type': 'object'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'value': {'type': 'number'}}, 'required': ['unit', 'value'], 'title': 'Quantity schema', 'type': 'object'}}, 'required': ['quantity'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}], 'title': 'Value schema', 'type': 'object'}}, 'required': ['value'], 'type': 'object'}, {'properties': {'complex_value': {'$id': '/chord_metadata_service/phenopackets/complex_value', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'typed_quantities': {'items': {'$id': '/chord_metadata_service/phenopackets/typed_quantity', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'quantity': {'$id': '/chord_metadata_service/phenopackets/quantity', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'reference_range': {'$id': '/chord_metadata_service/phenopackets/reference_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'high': {'type': 'number'}, 'low': {'type': 'number'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['unit', 'low', 'high'], 'title': 'Reference range schema', 'type': 'object'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'value': {'type': 'number'}}, 'required': ['unit', 'value'], 'title': 'Quantity schema', 'type': 'object'}, 'type': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['type', 'quantity'], 'title': 'Quantity schema', 'type': 'object'}, 'type': 'array'}}, 'required': ['typed_quantities'], 'title': 'Complex value schema', 'type': 'object'}}, 'required': ['complex_value'], 'type': 'object'}], 'properties': {'assay': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'description': {'type': 'string'}, 'procedure': {'$id': '/chord_metadata_service/phenopackets/procedure', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'A description of a clinical procedure performed on a subject in order to extract a biosample.', 'help': 'A description of a clinical procedure performed on a subject in order to extract a biosample.', 'properties': {'body_site': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'An ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'A CURIE-style identifier for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'A human readable class name for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'code': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term that represents a clinical procedure performed on a subject.', 'help': 'An ontology term that represents a clinical procedure performed on a subject.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term that represents a clinical procedure performed on a subject.', 'help': 'A CURIE-style identifier for an ontology term that represents a clinical procedure performed on a subject.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term that represents a clinical procedure performed on a subject.', 'help': 'A human readable class name for an ontology term that represents a clinical procedure performed on a subject.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'performed': {'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Age/time when the procedure was performed', 'help': 'Age/time when the procedure was performed', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}}, 'required': ['code'], 'title': 'Procedure schema', 'type': 'object'}, 'time_observed': {'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}}, 'required': ['assay'], 'title': 'Measurement schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='phenopacket',
            name='medical_actions',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/phenopackets/medical_action', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element describes medications, procedures, other actions taken for clinical management. The element is a list of options.', 'help': 'This element describes medications, procedures, other actions taken for clinical management. The element is a list of options.', 'oneOf': [{'properties': {'procedure': {'$id': '/chord_metadata_service/phenopackets/procedure', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'A description of a clinical procedure performed on a subject in order to extract a biosample.', 'help': 'A description of a clinical procedure performed on a subject in order to extract a biosample.', 'properties': {'body_site': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'An ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'A CURIE-style identifier for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'help': 'A human readable class name for an ontology term that is specified when it is not possible to represent the procedure with a single ontology class.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'code': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term that represents a clinical procedure performed on a subject.', 'help': 'An ontology term that represents a clinical procedure performed on a subject.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term that represents a clinical procedure performed on a subject.', 'help': 'A CURIE-style identifier for an ontology term that represents a clinical procedure performed on a subject.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term that represents a clinical procedure performed on a subject.', 'help': 'A human readable class name for an ontology term that represents a clinical procedure performed on a subject.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'performed': {'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Age/time when the procedure was performed', 'help': 'Age/time when the procedure was performed', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}}, 'required': ['code'], 'title': 'Procedure schema', 'type': 'object'}}, 'required': ['procedure'], 'type': 'object'}, {'properties': {'treatment': {'$id': '/chord_metadata_service/phenopackets/treatment', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Represents a treatment with an agent, such as a drug.', 'properties': {'agent': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'cumulative_dose': {'$id': '/chord_metadata_service/phenopackets/quantity', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'reference_range': {'$id': '/chord_metadata_service/phenopackets/reference_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'high': {'type': 'number'}, 'low': {'type': 'number'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['unit', 'low', 'high'], 'title': 'Reference range schema', 'type': 'object'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'value': {'type': 'number'}}, 'required': ['unit', 'value'], 'title': 'Quantity schema', 'type': 'object'}, 'dose_intervals': {'items': {'$id': '/chord_metadata_service/phenopackets/dose_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Represents the dose intervals of a treatment.', 'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}, 'quantity': {'$id': '/chord_metadata_service/phenopackets/quantity', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'reference_range': {'$id': '/chord_metadata_service/phenopackets/reference_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'properties': {'high': {'type': 'number'}, 'low': {'type': 'number'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['unit', 'low', 'high'], 'title': 'Reference range schema', 'type': 'object'}, 'unit': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'value': {'type': 'number'}}, 'required': ['unit', 'value'], 'title': 'Quantity schema', 'type': 'object'}, 'schedule_frequency': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['quantity', 'schedule_frequency', 'interval'], 'title': 'Phenopacket dose interval for treatment', 'type': 'object'}, 'type': 'array'}, 'drug_type': {'enum': ['UNKNOWN_DRUG_TYPE', 'PRESCRIPTION', 'EHR_MEDICATION_LIST', 'ADMINISTRATION_RELATED_TO_PROCEDURE'], 'type': 'string'}, 'route_of_administration': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['agent'], 'title': 'Phenopacket treatment', 'type': 'object'}}, 'required': ['treatment'], 'type': 'object'}, {'properties': {'radiation_therapy': {'$id': '/chord_metadata_service/phenopackets/radiation_therapy', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Radiation therapy (or radiotherapy) uses ionizing radiation, generally as part of cancer treatment to control or kill malignant cells.', 'properties': {'body_site': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'dosage': {'type': 'integer'}, 'fractions': {'type': 'integer'}, 'modality': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['modality', 'body_site', 'dosage', 'fractions'], 'title': 'Phenopacket radiation therapy', 'type': 'object'}}, 'required': ['radiation_therapy'], 'type': 'object'}, {'properties': {'therapeutic_regimen': {'$id': '/chord_metadata_service/phenopackets/therapeutic_regimen', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element represents a therapeutic regimen which will involve a specified set of treatments for a particular condition.', 'oneOf': [{'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'external_reference': {'$id': '/chord_metadata_service/phenopackets/external_reference', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An encoding of information about a reference to an external resource.', 'help': 'An encoding of information about a reference to an external resource.', 'properties': {'description': {'description': 'An application-specific free-text description.', 'help': 'An application-specific free-text description.', 'type': 'string'}, 'id': {'description': 'An application-specific identifier. It is RECOMMENDED that this is a CURIE that uniquely identifies the evidence source when combined with a resource; e.g. PMID:123456 with a resource `pmid`. It could also be a URI or other relevant identifier.', 'help': 'An application-specific identifier. It is RECOMMENDED that this is a CURIE that uniquely identifies the evidence source when combined with a resource; e.g. PMID:123456 with a resource `pmid`. It could also be a URI or other relevant identifier.', 'type': 'string'}, 'reference': {'type': 'string'}}, 'title': 'External reference schema', 'type': 'object'}}, 'required': ['external_reference'], 'type': 'object'}], 'properties': {'end_time': {'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, 'start_time': {'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, 'status': {'enum': ['UNKNOWN_STATUS', 'STARTED', 'COMPLETED', 'DISCONTINUED'], 'type': 'string'}}, 'required': ['status'], 'title': 'Phenopacket therapeutic regimen', 'type': 'object'}}, 'required': ['therapeutic_regimen'], 'type': 'object'}], 'properties': {'adverse_events': {'description': 'Any adverse effects experienced by the patient attributed to the treatment', 'help': 'Any adverse effects experienced by the patient attributed to the treatment', 'items': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term Any adverse effects experienced by the patient attributed to the treatment.', 'help': 'An ontology term Any adverse effects experienced by the patient attributed to the treatment.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term Any adverse effects experienced by the patient attributed to the treatment.', 'help': 'A CURIE-style identifier for an ontology term Any adverse effects experienced by the patient attributed to the treatment.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term Any adverse effects experienced by the patient attributed to the treatment.', 'help': 'A human readable class name for an ontology term Any adverse effects experienced by the patient attributed to the treatment.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'type': 'array'}, 'response_to_treatment': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'How the patient responded to the treatment', 'help': 'How the patient responded to the treatment', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'treatment_intent': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'Whether the intention of the treatment was curative, palliative…', 'help': 'Whether the intention of the treatment was curative, palliative…', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'treatment_target': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'The condition or disease that this treatment was intended to address', 'help': 'The condition or disease that this treatment was intended to address', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'treatment_termination_reason': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'The reason that the treatment was stopped.', 'help': 'The reason that the treatment was stopped.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'title': 'Phenopacket medical action schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='phenotypicfeature',
            name='excluded',
            field=models.BooleanField(default=False, help_text='Whether the feature is present (false) or absent (true, feature is excluded); default false.'),
        ),
        migrations.AddField(
            model_name='phenotypicfeature',
            name='modifiers',
            field=models.JSONField(blank=True, help_text='A list of ontology terms that provide more expressive / precise descriptions of a phenotypic feature, including e.g. positionality or external factors.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class_list', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Ontology class list', 'items': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'title': 'Ontology class list', 'type': 'array'}, formats=None)]),
        ),
        migrations.AddField(
            model_name='phenotypicfeature',
            name='resolution',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='diagnostic_markers',
            field=models.JSONField(blank=True, help_text='A list of ontology terms representing clinically-relevant bio-markers.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class_list', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Ontology class list', 'items': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'title': 'Ontology class list', 'type': 'array'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='histological_diagnosis',
            field=models.JSONField(blank=True, help_text='An ontology term representing a refinement of the clinical diagnosis. Normal samples could be tagged with NCIT:C38757, representing a negative finding.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='sampled_tissue',
            field=models.JSONField(help_text='An ontology term describing the tissue from which the specimen was collected. The use of UBERON is recommended.', validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='taxonomy',
            field=models.JSONField(blank=True, help_text='An ontology term specified when more than one organism may be studied. It is advised that codesfrom the NCBI Taxonomy resource are used, e.g. NCBITaxon:9606 for humans.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='tumor_grade',
            field=models.JSONField(blank=True, help_text='An ontology term representing the tumour grade. This should be a child term of NCIT:C28076 (Disease Grade Qualifier) or equivalent.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='tumor_progression',
            field=models.JSONField(blank=True, help_text='An ontology term representing if the specimen is from a primary tumour, a metastasis, or a recurrence. There are multiple ways of representing this using ontology terms, and the terms chosen will have a specific meaning that is application specific.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='diagnosis',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='diagnosis',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='disease',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='disease',
            name='disease_stage',
            field=models.JSONField(blank=True, help_text='A list of terms representing the disease stage. Elements should be derived from child terms of NCIT:C28108 (Disease Stage Qualifier) or equivalent hierarchy from another ontology.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class_list', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Ontology class list', 'items': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'title': 'Ontology class list', 'type': 'array'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='disease',
            name='onset',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='disease',
            name='term',
            field=models.JSONField(help_text="An ontology term that represents the disease. It's recommended that one of the OMIM, Orphanet, or MONDO ontologies is used for rare human diseases.", validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='disease',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='gene',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='gene',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='genomicinterpretation',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='genomicinterpretation',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='interpretation',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.RemoveField(
            model_name='interpretation',
            name='diagnosis',
        ),
        migrations.AlterField(
            model_name='interpretation',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='created_by',
            field=models.CharField(blank=True, default=None, help_text='Name of the person who created the phenopacket.', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='external_references',
            field=models.JSONField(blank=True, help_text='A list of external (non-resource) references.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/schema_list', '$schema': 'http://json-schema.org/draft-07/schema#', 'items': {'$id': '/chord_metadata_service/phenopackets/external_reference', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An encoding of information about a reference to an external resource.', 'help': 'An encoding of information about a reference to an external resource.', 'properties': {'description': {'description': 'An application-specific free-text description.', 'help': 'An application-specific free-text description.', 'type': 'string'}, 'id': {'description': 'An application-specific identifier. It is RECOMMENDED that this is a CURIE that uniquely identifies the evidence source when combined with a resource; e.g. PMID:123456 with a resource `pmid`. It could also be a URI or other relevant identifier.', 'help': 'An application-specific identifier. It is RECOMMENDED that this is a CURIE that uniquely identifies the evidence source when combined with a resource; e.g. PMID:123456 with a resource `pmid`. It could also be a URI or other relevant identifier.', 'type': 'string'}, 'reference': {'type': 'string'}}, 'title': 'External reference schema', 'type': 'object'}, 'title': 'Schema list', 'type': 'array'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='submitted_by',
            field=models.CharField(blank=True, default=None, help_text='Name of the person who submitted the phenopacket.', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='metadata',
            name='updates',
            field=models.JSONField(blank=True, help_text='A list of updates to the phenopacket.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/schema_list', '$schema': 'http://json-schema.org/draft-07/schema#', 'items': {'$id': '/chord_metadata_service/phenopackets/update', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An update event for a record (e.g. a phenopacket.)', 'help': 'An update event for a record (e.g. a phenopacket.)', 'properties': {'comment': {'description': 'Free-text comment about the changes made and/or the reason for the update.', 'help': 'Free-text comment about the changes made and/or the reason for the update.', 'type': 'string'}, 'timestamp': {'description': 'ISO8601 UTC timestamp specifying when when this update occurred.', 'format': 'date-time', 'help': 'Timestamp specifying when when this update occurred.', 'type': 'string'}, 'updated_by': {'description': 'Information about the person/organization/network that performed the update.', 'help': 'Information about the person/organization/network that performed the update.', 'type': 'string'}}, 'required': ['timestamp', 'comment'], 'title': 'Updates schema', 'type': 'object'}, 'title': 'Schema list', 'type': 'array'}, formats=['date-time'])]),
        ),
        migrations.AlterField(
            model_name='phenopacket',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='phenopacket',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='phenotypicfeature',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='phenotypicfeature',
            name='evidence',
            field=models.JSONField(blank=True, help_text='One or more pieces of evidence that specify how the phenotype was determined.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/phenopackets/evidence', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'A representation of the evidence for an assertion, such as an observation of a phenotypic feature.', 'help': 'A representation of the evidence for an assertion, such as an observation of a phenotypic feature.', 'properties': {'evidence_code': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term that represents the evidence type.', 'help': 'An ontology term that represents the evidence type.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term that represents the evidence type.', 'help': 'A CURIE-style identifier for an ontology term that represents the evidence type.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term that represents the evidence type.', 'help': 'A human readable class name for an ontology term that represents the evidence type.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, 'reference': {'$id': '/chord_metadata_service/phenopackets/external_reference', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An encoding of information about a reference to an external resource.', 'help': 'An encoding of information about a reference to an external resource.', 'properties': {'description': {'description': 'An application-specific free-text description.', 'help': 'An application-specific free-text description.', 'type': 'string'}, 'id': {'description': 'An application-specific identifier. It is RECOMMENDED that this is a CURIE that uniquely identifies the evidence source when combined with a resource; e.g. PMID:123456 with a resource `pmid`. It could also be a URI or other relevant identifier.', 'help': 'An application-specific identifier. It is RECOMMENDED that this is a CURIE that uniquely identifies the evidence source when combined with a resource; e.g. PMID:123456 with a resource `pmid`. It could also be a URI or other relevant identifier.', 'type': 'string'}, 'reference': {'type': 'string'}}, 'title': 'External reference schema', 'type': 'object'}}, 'required': ['evidence_code'], 'title': 'Evidence schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='phenotypicfeature',
            name='onset',
            field=models.JSONField(blank=True, null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='phenotypicfeature',
            name='pftype',
            field=models.JSONField(help_text='An ontology term which describes the phenotype.', validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)], verbose_name='type'),
        ),
        migrations.AlterField(
            model_name='phenotypicfeature',
            name='severity',
            field=models.JSONField(blank=True, help_text='An ontology term that describes the severity of the condition.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='phenotypicfeature',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.DeleteModel(
            name='HtsFile',
        ),
        migrations.DeleteModel(
            name='Variant',
        ),
        migrations.AddField(
            model_name='variantinterpretation',
            name='variation_descriptor',
            field=models.ForeignKey(help_text='Variation Descriptors are part of the VRSATILE framework, a set of conventions extending the GA4GH Variation Representation Specification (VRS).', on_delete=django.db.models.deletion.CASCADE, to='phenopackets.variationdescriptor'),
        ),
        migrations.AddField(
            model_name='genomicinterpretation',
            name='gene_descriptor',
            field=models.ForeignKey(blank=True, help_text="Corresponds to 'call' field in schema in case of GeneDescriptor", null=True, on_delete=django.db.models.deletion.CASCADE, to='phenopackets.genedescriptor'),
        ),
        migrations.AddField(
            model_name='genomicinterpretation',
            name='variant_interpretation',
            field=models.ForeignKey(blank=True, help_text="Corresponds to 'call' field in schema in case of VariantInterpretation", null=True, on_delete=django.db.models.deletion.CASCADE, to='phenopackets.variantinterpretation'),
        ),
        migrations.AddField(
            model_name='interpretation',
            name='diagnosis',
            field=models.OneToOneField(blank=True, help_text='One or more diagnoses, if made.', null=True, on_delete=django.db.models.deletion.CASCADE, to='phenopackets.diagnosis'),
        ),
        migrations.DeleteModel(
            name='Gene',
        ),
        migrations.AddField(
            model_name='genomicinterpretation',
            name='biosample',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='genomic_interpretations', to='phenopackets.biosample'),
        ),
        migrations.AddField(
            model_name='genomicinterpretation',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='genomic_interpretations', to='patients.individual'),
        ),
        migrations.AlterField(
            model_name='diagnosis',
            name='id',
            field=models.CharField(max_length=200, primary_key=True, serialize=False),
        ),
    ]
