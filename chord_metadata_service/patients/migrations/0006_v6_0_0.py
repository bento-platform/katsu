# Generated by Django 4.2.7 on 2023-11-08 20:11

import chord_metadata_service.restapi.models
import chord_metadata_service.restapi.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('patients', '0005_v5_0_0'),
    ]

    operations = [
        migrations.CreateModel(
            name='VitalStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, null=True)),
                ('updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('UNKNOWN_STATUS', 'UNKNOWN_STATUS'), ('ALIVE', 'ALIVE'), ('DECEASED', 'DECEASED')], max_length=200)),
                ('time_of_death', models.JSONField(blank=True, help_text='Should be left blank if patient not known to be deceased', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, formats=None)])),
                ('cause_of_death', models.JSONField(blank=True, help_text='Should be left blank if patient not known to be deceased', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)])),
                ('survival_time_in_days', models.IntegerField(blank=True, help_text='Number of days the patient was alive after their primary diagnosis', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, chord_metadata_service.restapi.models.IndexableMixin),
        ),
        migrations.RemoveField(
            model_name='individual',
            name='age',
        ),
        migrations.AddField(
            model_name='individual',
            name='time_at_last_encounter',
            field=models.JSONField(blank=True, help_text='TimeElement of the patient when last encountered.', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/time_element', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'help': 'This element intends to bundle all of the various ways of denoting time or age in phenopackets schema.', 'oneOf': [{'properties': {'gestational_age': {'$id': '/chord_metadata_service/restapi/gestational_age', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'help': 'Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery.', 'properties': {'days': {'$id': '/chord_metadata_service/restapi/gestational_age/days', 'description': 'RECOMMENDED, If available', 'help': 'RECOMMENDED, If available', 'type': 'integer'}, 'weeks': {'$id': '/chord_metadata_service/restapi/gestational_age/weeks', 'description': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'help': 'Completed weeks of gestation according to the above definition. REQUIRED.', 'type': 'integer'}}, 'required': ['weeks'], 'title': 'Gestational age schema', 'type': 'object'}}, 'required': ['gestational_age'], 'type': 'object'}, {'properties': {'age': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['age'], 'type': 'object'}, {'properties': {'age_range': {'$id': '/chord_metadata_service/restapi/age_range', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'help': "Age range of a subject (e.g. when a subject's age falls into a bin.)", 'properties': {'end': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the end of the age range bin.', 'help': 'An ISO8601 duration string representing the end of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}, 'start': {'$id': '/chord_metadata_service/restapi/age', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ISO8601 duration string representing the start of the age range bin.', 'help': 'An ISO8601 duration string representing the start of the age range bin.', 'properties': {'iso8601duration': {'$id': '/chord_metadata_service/restapi/age_string', '$schema': 'http://json-schema.org/draft-07/schema#', 'description': 'An ISO8601 duration string (e.g. P40Y10M05D for 40 years, 10 months, 5 days) representing an age of a subject.', 'help': 'Age of a subject.', 'type': 'string'}}, 'required': ['iso8601duration'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['start', 'end'], 'title': 'Age range schema', 'type': 'object'}}, 'required': ['age_range'], 'type': 'object'}, {'properties': {'ontology_class': {'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}}, 'required': ['ontology_class'], 'type': 'object'}, {'properties': {'timestamp': {'format': 'date-time', 'type': 'string'}}, 'required': ['timestamp'], 'type': 'object'}, {'properties': {'interval': {'$id': '/chord_metadata_service/restapi/time_interval', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An age object describing the age of the individual at the time of collection of biospecimens or phenotypic observations.', 'properties': {'end': {'format': 'date-time', 'type': 'string'}, 'start': {'format': 'date-time', 'type': 'string'}}, 'required': ['start', 'end'], 'title': 'Age schema', 'type': 'object'}}, 'required': ['interval'], 'type': 'object'}], 'title': 'Time element schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='individual',
            name='created',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='individual',
            name='taxonomy',
            field=models.JSONField(blank=True, help_text='Ontology resource representing the species (e.g., NCBITaxon:9615).', null=True, validators=[chord_metadata_service.restapi.validators.JsonSchemaValidator({'$id': '/chord_metadata_service/restapi/ontology_class', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'An ontology term.', 'help': 'An ontology term.', 'properties': {'id': {'$id': '/chord_metadata_service/restapi/ontology_class/id', 'description': 'A CURIE-style identifier for an ontology term.', 'help': 'A CURIE-style identifier for an ontology term.', 'type': 'string'}, 'label': {'$id': '/chord_metadata_service/restapi/ontology_class/label', 'description': 'A human readable class name for an ontology term.', 'help': 'A human readable class name for an ontology term.', 'type': 'string'}}, 'required': ['id', 'label'], 'title': 'Ontology class schema', 'type': 'object'}, formats=None)]),
        ),
        migrations.AlterField(
            model_name='individual',
            name='updated',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='individual',
            name='vital_status',
            field=models.OneToOneField(blank=True, help_text='The vital status of the individual e.g. whether they are alive or the time and cause of death', null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.vitalstatus'),
        ),
    ]
